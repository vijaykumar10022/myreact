{"version":3,"sources":["Profile.js","App.js","serviceWorker.js","index.js"],"names":["Profile","indexValue","this","props","location","data","id","specificprofile","Data","profiles","className","basicInformation","name","role","href","email","mobile","class","border","cellpadding","cellspacing","Education","map","i","j","Degree","institution","Percentage","skillset","webtechnologies","split","programminglanguages","operatingsystem","frameworks","React","Component","home","info","index","key","to","pathname","App","k","l","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.eacd75a6.chunk.js","sourcesContent":["import React from 'react'\r\nimport './App.css';\r\nimport Data from './data/data.json';\r\n// export default class Profile extends React.Component{\r\n// \trender(){\r\n// \t\tvar style={\r\n//       background:\"#000\",\r\n//       color:\"#fff\",\r\n//       padding:\"1%\",\r\n//       textAligh:\"center\"\r\n//     };\r\n// \t\treturn(\r\n// \t\t\t<div>\r\n// \t\t\t<h3 style={style}>{this.props.bestfriend} is bestfriend for {this.props.name}</h3>\r\n// \t\t\t</div>\r\n// \t\t\t)\r\n// \t}\r\n// }\r\n// var style={\r\n// \t      background:\"#000\",\r\n// \t      color:\"#fff\",\r\n// \t      padding:\"1%\",\r\n// \t      textAligh:\"center\"\r\n// \t    };\r\n// let Profile=(p)=>{\r\n// \treturn <div><h4 style={style}>{p.name}s best friend is {p.bestfriend} </h4></div>\r\n// }\r\nclass Profile extends React.Component{\r\n\r\n\trender(){\r\n\t\tvar indexValue=this.props.location.data.id;\r\n\t\tvar specificprofile=Data.profiles[indexValue];\r\n\t\t// var data=specificprofile.skillset.webtechnologies;\r\n\t\t// var sdata=data.split(\" \");\r\n\t\t// var planguage=specificprofile.\r\n\t\t\r\n\t\t\r\n\t\t// {this.props.data.id}\r\n\t\treturn (\r\n\t\t\t<section className=\"parent\">\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t<div className=\"card-top\">\r\n\t\t\t\t\t\t<h2>{specificprofile.basicInformation.name}</h2>\r\n\t\t\t\t\t\t<em>{specificprofile.basicInformation.role}</em>\r\n\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"card-bottom\">\r\n\t\t\t\t\t<a href={\"mailto:\"+specificprofile.basicInformation.email}>{specificprofile.basicInformation.email}</a>\r\n                <br></br>\r\n                <a href={\"tel:\"+specificprofile.basicInformation.mobile}>{specificprofile.basicInformation.mobile}</a>\r\n                <br></br>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"child2\">\r\n\t\t\t\t<div className=\"profile\">\r\n\t\t\t\t<h2>Profile</h2><hr></hr>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>I have been working as a trainer from the past 3 years. Worked for Various companies such as institute for electronic Governance , I'm Currently working for </li>\r\n\t\t\t\t<li>Having Extensive Experince in building of logical modules using C Language.</li>\r\n\t\t\t\t<li>Having Teaching Experince MIT.</li>\r\n\t\t\t\t<li>Having Experince In Source Code Management Using Git&GitHub.</li>\r\n\t\t\t\t<li>Having Knowledge on Data bases like mysql,sql,nosql and PDO</li>\r\n\t\t\t\t<li>Developed few websites using flask along with mysql database.</li>\r\n\t\t\t\t<li>Having Teaching Experince in Data Strucure&Algorithms</li>\r\n\t\t\t\t<li>Having Experince in Machine Learing&Data Visuvalization</li>\r\n\t\t\t</ul>\r\n\t\t\t\t</div><br></br>\r\n\t\t\t\t<div></div>\r\n\t\t\t\t<div className=\"card2\">\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"card-bottom\">\r\n\t\t\t\t\t\t<h2> Educational Qualifications</h2>\r\n\t\t\t\t\t</div>\t\t\t\t\r\n\t\t\t<table border=\"1px\" cellpadding=\"10px\" cellspacing=\"10px\" >\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>Degree</td>\r\n\t\t\t\t\t\t<td>Institute</td>\r\n\t\t\t\t\t\t<td>Percentage</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t{specificprofile.Education.map((i,j)=>(\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>{i.Degree}</td>\r\n\t\t\t\t\t\t<td>{i.institution}</td>\r\n\t\t\t\t\t\t<td>{i.Percentage}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t\r\n\t\t\t\t</tbody>\r\n\t\t\t\t)\r\n\t\t\t\t)}\r\n\t\t\t</table>\r\n\t\t\t</div>\r\n\t\t\t<h2>Skill Set</h2><hr></hr>\r\n\t\t\t<h3>Web Technologis</h3>\r\n\t\t\t<span>{specificprofile.skillset.webtechnologies.split(\" \")[0]}</span><span>{specificprofile.skillset.webtechnologies.split(\" \")[1]}</span><span>{specificprofile.skillset.webtechnologies.split(\" \")[2]}</span>\r\n\t\t\t<h3>Programming Language</h3>\r\n\t\t\t<span>{specificprofile.skillset.programminglanguages.split(\" \")[0]}</span><span>{specificprofile.skillset.programminglanguages.split(\" \")[1]}</span>\r\n\t\t\t<h3>Operating System</h3>\r\n\t\t\t\t<span>{specificprofile.skillset.operatingsystem.split(\" \")[0]}</span><span>{specificprofile.skillset.operatingsystem.split(\" \")[1]}</span>\t\t\t\r\n\t\t\t<h3>Frame Works</h3>\r\n\t\t\t\t<span>{specificprofile.skillset.frameworks.split(\" \")[0]}</span><span>{specificprofile.skillset.frameworks.split(\" \")[1]}</span><span>{specificprofile.skillset.frameworks.split(\" \")[2]}</span><span>{specificprofile.skillset.frameworks.split(\" \")[3]}</span><span>{specificprofile.skillset.frameworks.split(\" \")[4]}</span>\r\n\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Profile;","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport Data from './data/data.json';\nimport Profile from './Profile';\n// import ReactDom from 'react-dom'\nimport {BrowserRouter,Route,Link} from 'react-router-dom';\n// import Profile from './Profile';\nfunction App() {\n  var info=Data.profiles;\n  // ReactDom.render(<p>Hello </p>,document.getElementById('header'))\n    // let array=['abc','adf',\"asdfa\",\"dsafd\",\"erew\",\"etrwaw\"];\n    // let array2=[\"dteaf\",\"derawe\",\"ewrwwr\",\"rewewwas\",\"eretty\",\"erwertw\"]\n    return (\n      <section>\n        <BrowserRouter>\n        <header className=\"header\">\n\n        {info.map((k,l)=>(\n                <Link to={{pathname:\"/profile\",data:{id:l}}}>{\"Profile\"+(l+1)+\" \"}</Link>\n        ))}\n\n      </header><br></br><br></br>\n        <Route exact path=\"/profile\" component={Profile}>\n        </Route>\n        <Route exact path=\"/myreact\" component={home}></Route>\n        </BrowserRouter>       \n        </section>\n    )\n}\nlet home=()=>{\n  var info=Data.profiles;\n  return (\n    <section className=\"parent\">\n      {\n          info.map((i,index)=>(\n            <div className=\"card\" key={index}>\n              <div className=\"card-top\">\n              <h2> {i.basicInformation.name}</h2><br></br>\n              <h5><em>{i.basicInformation.role}</em></h5>\n              </div>\n              <div className=\"card-bottom\">\n                <a href={\"mailto:\"+i.basicInformation.email}>{i.basicInformation.email}</a>\n                <br></br>\n                <a href={\"tel:\"+i.basicInformation.mobile}>{i.basicInformation.mobile}</a>\n                <br></br>\n                <Link to={{pathname:\"/profile\",data:{id:index}}}> ViewProfile >></Link>\n                \n            </div>\n            </div>\n            \n\n          ))\n        }\n\n    </section>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}